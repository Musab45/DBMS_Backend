# Social Media API Endpoints Documentation

## Authentication Endpoints

### Register User
```
POST /api/auth/register/
Content-Type: application/json

Request Body:
{
    "username": "string",
    "password": "string",
    "password2": "string",
    "email": "string",
    "first_name": "string",
    "last_name": "string"
}

Response (201 Created):
{
    "user": {
        "id": integer,
        "username": "string",
        "email": "string",
        "first_name": "string",
        "last_name": "string",
        "profile": {
            "id": integer,
            "username": "string",
            "bio": "string",
            "profile_picture": "string",
            "followers_count": integer,
            "following_count": integer,
            "created_at": "datetime",
            "updated_at": "datetime"
        }
    },
    "refresh": "string",
    "access": "string"
}
```

### Login
```
POST /api/auth/token/
Content-Type: application/json

Request Body:
{
    "username": "string",
    "password": "string"
}

Response (200 OK):
{
    "access": "string",
    "refresh": "string",
    "user": {
        "id": integer,
        "username": "string",
        "email": "string",
        "first_name": "string",
        "last_name": "string",
        "profile": {
            "id": integer,
            "username": "string",
            "bio": "string",
            "profile_picture": "string",
            "followers_count": integer,
            "following_count": integer,
            "created_at": "datetime",
            "updated_at": "datetime"
        }
    }
}
```

### Refresh Token
```
POST /api/auth/token/refresh/
Content-Type: application/json

Request Body:
{
    "refresh": "string"
}

Response (200 OK):
{
    "access": "string"
}
```

## User Endpoints

### Get User Profile
```
GET /api/users/{user_id}/profile/
Authorization: Bearer <access_token>

Response (200 OK):
{
    "id": integer,
    "username": "string",
    "bio": "string",
    "profile_picture": "string",
    "followers_count": integer,
    "following_count": integer,
    "created_at": "datetime",
    "updated_at": "datetime"
}
```

### Get User Posts
```
GET /api/users/{user_id}/posts/
Authorization: Bearer <access_token>

Response (200 OK):
[
    {
        "id": integer,
        "author_username": "string",
        "author_user_id": integer,
        "author_profile_id": integer,
        "content": "string",
        "image": "string",
        "created_at": "datetime",
        "updated_at": "datetime",
        "likes_count": integer,
        "reposts_count": integer,
        "comments_count": integer,
        "comments": [...]
    }
]
```

### Get User Liked Posts
```
GET /api/users/{user_id}/liked_posts/
Authorization: Bearer <access_token>

Response (200 OK):
[
    {
        "id": integer,
        "author_username": "string",
        "author_user_id": integer,
        "author_profile_id": integer,
        "content": "string",
        "image": "string",
        "created_at": "datetime",
        "updated_at": "datetime",
        "likes_count": integer,
        "reposts_count": integer,
        "comments_count": integer,
        "comments": [...]
    }
]
```

## Profile Endpoints

### Follow/Unfollow User
```
POST /api/profiles/{profile_id}/follow/
Authorization: Bearer <access_token>

Response (200 OK):
{
    "status": "followed" | "unfollowed"
}
```

### Get Followers
```
GET /api/profiles/{profile_id}/followers/
Authorization: Bearer <access_token>

Response (200 OK):
[
    {
        "id": integer,
        "username": "string",
        "bio": "string",
        "profile_picture": "string",
        "followers_count": integer,
        "following_count": integer,
        "created_at": "datetime",
        "updated_at": "datetime"
    }
]
```

### Get Following
```
GET /api/profiles/{profile_id}/following/
Authorization: Bearer <access_token>

Response (200 OK):
[
    {
        "id": integer,
        "username": "string",
        "bio": "string",
        "profile_picture": "string",
        "followers_count": integer,
        "following_count": integer,
        "created_at": "datetime",
        "updated_at": "datetime"
    }
]
```

## Post Endpoints

### Create Post
```
POST /api/posts/
Authorization: Bearer <access_token>
Content-Type: multipart/form-data

Request Body:
{
    "content": "string",
    "image": file (optional)
}

Response (201 Created):
{
    "id": integer,
    "author_username": "string",
    "author_user_id": integer,
    "author_profile_id": integer,
    "content": "string",
    "image": "string",
    "created_at": "datetime",
    "updated_at": "datetime",
    "likes_count": integer,
    "reposts_count": integer,
    "comments_count": integer,
    "comments": []
}
```

### Get Feed Posts
```
GET /api/posts/feed/
Authorization: Bearer <access_token>

Response (200 OK):
[
    {
        "id": integer,
        "author_username": "string",
        "author_user_id": integer,
        "author_profile_id": integer,
        "content": "string",
        "image": "string",
        "created_at": "datetime",
        "updated_at": "datetime",
        "likes_count": integer,
        "reposts_count": integer,
        "comments_count": integer,
        "comments": [...]
    }
]
```

### Get Explore Posts
```
GET /api/posts/explore/
Authorization: Bearer <access_token>

Response (200 OK):
[
    {
        "id": integer,
        "author_username": "string",
        "author_user_id": integer,
        "author_profile_id": integer,
        "content": "string",
        "image": "string",
        "created_at": "datetime",
        "updated_at": "datetime",
        "likes_count": integer,
        "reposts_count": integer,
        "comments_count": integer,
        "comments": [...]
    }
]
```

### Like/Unlike Post
```
POST /api/posts/{post_id}/like/
Authorization: Bearer <access_token>

Response (200 OK):
{
    "status": "liked" | "unliked"
}
```

### Repost/Unrepost
```
POST /api/posts/{post_id}/repost/
Authorization: Bearer <access_token>

Response (200 OK):
{
    "status": "reposted" | "unreposted"
}
```

## Comment Endpoints

### Create Comment
```
POST /api/comments/
Authorization: Bearer <access_token>
Content-Type: application/json

Request Body:
{
    "post": integer,
    "content": "string",
    "parent": integer (optional)
}

Response (201 Created):
{
    "id": integer,
    "post": integer,
    "username": "string",
    "content": "string",
    "created_at": "datetime",
    "updated_at": "datetime",
    "likes_count": integer,
    "replies": [...]
}
```

### Like/Unlike Comment
```
POST /api/comments/{comment_id}/like/
Authorization: Bearer <access_token>

Response (200 OK):
{
    "status": "liked" | "unliked"
}
```

### Reply to Comment
```
POST /api/comments/{comment_id}/reply/
Authorization: Bearer <access_token>
Content-Type: application/json

Request Body:
{
    "content": "string"
}

Response (201 Created):
{
    "id": integer,
    "post": integer,
    "username": "string",
    "content": "string",
    "created_at": "datetime",
    "updated_at": "datetime",
    "likes_count": integer,
    "replies": [...]
}
```

## Message Endpoints

### Get Conversations
```
GET /api/messages/conversations/
Authorization: Bearer <access_token>

Response (200 OK):
[
    {
        "user": {
            "id": integer,
            "username": "string",
            "email": "string",
            "first_name": "string",
            "last_name": "string",
            "profile": {...}
        },
        "last_message": {
            "id": integer,
            "sender": integer,
            "sender_username": "string",
            "receiver": integer,
            "receiver_username": "string",
            "content": "string",
            "created_at": "datetime",
            "is_read": boolean
        }
    }
]
```

### Get Messages with User
```
GET /api/messages/with/{user_id}/
Authorization: Bearer <access_token>

Response (200 OK):
[
    {
        "id": integer,
        "sender": integer,
        "sender_username": "string",
        "receiver": integer,
        "receiver_username": "string",
        "content": "string",
        "created_at": "datetime",
        "is_read": boolean
    }
]
```

### Send Message
```
POST /api/messages/
Authorization: Bearer <access_token>
Content-Type: application/json

Request Body:
{
    "receiver": integer,
    "content": "string"
}

Response (201 Created):
{
    "id": integer,
    "sender": integer,
    "sender_username": "string",
    "receiver": integer,
    "receiver_username": "string",
    "content": "string",
    "created_at": "datetime",
    "is_read": boolean
}
```

### Get Unread Message Count
```
GET /api/messages/unread_count/
Authorization: Bearer <access_token>

Response (200 OK):
{
    "unread_count": integer
}
```

### Mark Message as Read
```
POST /api/messages/{message_id}/mark_as_read/
Authorization: Bearer <access_token>

Response (200 OK):
{
    "status": "marked as read"
}
```

## Error Responses

All endpoints may return the following error responses:

### 400 Bad Request
```
{
    "field_name": ["error message"]
}
```

### 401 Unauthorized
```
{
    "detail": "Authentication credentials were not provided."
}
```

### 403 Forbidden
```
{
    "detail": "You do not have permission to perform this action."
}
```

### 404 Not Found
```
{
    "detail": "Not found."
}
```

### 500 Internal Server Error
```
{
    "detail": "Internal server error."
}
``` 